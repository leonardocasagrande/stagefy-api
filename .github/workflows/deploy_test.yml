name: Test CD

on:
  pull_request:
    types: [closed]
    branches: [test]

  workflow_dispatch:
    branches: [test]

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Remove server's previous ./dist
        uses: appleboy/ssh-action@master
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
        with:
          host: ${{ secrets.SSH_TEST_HOST }}
          username: ${{ secrets.SSH_TEST_USER }}
          port: ${{ secrets.SSH_TEST_PORT }}
          key: ${{ secrets.SSH_TEST_PRIVATE_KEY}}
          script_stop: true
          envs: REPO_NAME
          script: |
            cd ~/app/${REPO_NAME}
            sudo rm -rf ./dist

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14.x

      # Instalar as dependÃªncias NPM/Yarn
      - name: Install dependencies
        run: yarn

      # Executar a build
      - name: Run build
        run: yarn build

      # Copiar pasta dist para dentro do servidor
      - name: Copy dist to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_TEST_HOST }}
          username: ${{ secrets.SSH_TEST_USER }}
          port: ${{ secrets.SSH_TEST_PORT }}
          key: ${{ secrets.SSH_TEST_PRIVATE_KEY}}
          source: '.,!node_modules'
          target: ~/app/${{ env.REPO_NAME }}

      # Yarn + migrations + restart server pm2
      - name: Install dependencies on server => yarn + .env + containers + restart
        uses: appleboy/ssh-action@master
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
        with:
          host: ${{ secrets.SSH_TEST_HOST }}
          username: ${{ secrets.SSH_TEST_USER }}
          port: ${{ secrets.SSH_TEST_PORT }}
          key: ${{ secrets.SSH_TEST_PRIVATE_KEY}}
          script_stop: true
          envs: REPO_NAME
          script: |
            cd ~/app/${REPO_NAME}
            sudo yarn
            bash create-env-file.sh test
            sudo pm2 restart ${REPO_NAME} --time || sudo pm2 start ./dist/shared/main/server.js --name ${REPO_NAME} --time --node-args="-r dotenv/config"
